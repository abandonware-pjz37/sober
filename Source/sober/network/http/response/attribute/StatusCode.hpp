#ifndef SOBER_NETWORK_HTTP_RESPONSE_ATTRIBUTE_STATUSCODE_HPP_
#define SOBER_NETWORK_HTTP_RESPONSE_ATTRIBUTE_STATUSCODE_HPP_

// Copyright (c) 2014, Ruslan Baratov
// All rights reserved.

#include <iosfwd> // std::ostream

namespace sober {
namespace network {
namespace http {
namespace response {
namespace attribute {

// rfc7231, 8.2.3. Registrations
enum class StatusCode {
  // 6.2 Informational 1xx
  CONTINUE = 100,
  SWITCHING_PROTOCOLS = 101,
  PROCESSING = 102, // rfc2518
  // 6.3. Successful 2xx
  OK = 200,
  CREATED = 201,
  ACCEPTED = 202,
  NON_AUTHORITATIVE_INFORMATION = 203,
  NO_CONTENT = 204,
  RESET_CONTENT = 205,
  PARTIAL_CONTENT = 206,
  MULTI_STATUS = 207, // rfc4918
  ALREADY_REPORTED = 208, // rfc5842
  IM_USED = 226, // rfc3229
  // 6.4. Redirection 3xx
  MULTIPLE_CHOICES = 300,
  MOVED_PERMANENTLY = 301,
  FOUND = 302,
  SEE_OTHER = 303,
  NOT_MODIFIED = 304,
  USE_PROXY = 305,
  SWITCH_PROXY = 306,
  TEMPORARY_REDIRECT = 307,
  PERMANENT_REDIRECT = 308,
  // 6.5. Client Error 4xx
  BAD_REQUEST = 400,
  UNAUTHORIZED = 401,
  PAYMENT_REQUIRED = 402,
  FORBIDDEN = 403,
  NOT_FOUND = 404,
  METHOD_NOT_ALLOWED = 405,
  NOT_ACCEPTABLE = 406,
  PROXY_AUTHENTICATION_REQUIRED = 407,
  REQUEST_TIME_OUT = 408,
  CONFLICT = 409,
  GONE = 410,
  LENGTH_REQUIRED = 411,
  PRECONDITION_FAILED = 412,
  REQUEST_ENTITY_TOO_LARGE = 413,
  REQUEST_URI_TOO_LARGE = 414,
  UNSUPPORTED_MEDIA_TYPE = 415,
  REQUESTED_RANGE_NOT_SATISFIABLE = 416,
  EXPECTATION_FAILED = 417,
  IM_A_TEAPOT = 418, // rfc2324 (:
  AUTHENTICATION_TIMEOUT = 419,
  METHOD_FAILURE = 420,
  ENHANCE_YOUR_CALM = 420,
  UNPROCESSABLE_ENTITY = 422, // rfc4918
  LOCKED = 423, // rfc4918
  FAILED_DEPENDENCY = 424, // rfc4918
  UNORDERED_COLLECTION = 425,
  UPGRADE_REQUIRED = 426, // rfc2817
  PRECONDITION_REQUIRED = 428, // rfc6585
  TOO_MANY_REQUESTS = 429, // rfc6585
  REQUEST_HEADER_FIELDS_TOO_LARGE = 431, // rfc6585
  LOGIN_TIMEOUT = 440,
  NO_RESPONSE = 444,
  RETRY_WITH = 449,
  BLOCKED_BY_WINDOWS_PARENTAL_CONTROLS = 450,
  UNAVAILABLE_FOR_LEGAL_REASONS = 451,
  REDIRECT = 451,
  REQUEST_HEADER_TOO_LARGE = 494,
  CERT_ERROR = 495,
  NO_CERT = 496,
  HTTP_TO_HTTPS = 497,
  CLIENT_CLOSED_REQUEST = 499,
  // 6.6. Server Error 5xx
  INTERNAL_SERVER_ERROR = 500,
  NOT_IMPLEMENTED = 501,
  BAD_GATEWAY = 502,
  SERVICE_UNAVAILABLE = 503,
  GATEWAY_TIME_OUT = 504,
  HTTP_VERSION_NOT_SUPPORTED = 505,
  VARIANT_ALSO_NEGOTIATES = 506, // rfc2295 (8.1)
  INSUFFICIENT_STORAGE = 507,
  LOOP_DETECTED = 508, // rfc5842
  BANDWIDTH_LIMIT_EXCEEDED = 509,
  NOT_EXTENDED = 510, // rfc2774 (7)
  NETWORK_AUTHENTICATION_REQUIRED = 511, // rfc6585 (6)
  ORIGIN_ERROR = 520,
  WEB_SERVER_IS_DOWN = 521,
  CONNECTION_TIMED_OUT = 522,
  PROXY_DECLINED_REQUEST = 523,
  A_TIMEOUT_OCCURRED = 524,
  NETWORK_READ_TIMEOUT_ERROR = 598,
  NETWORK_CONNECT_TIMEOUT_ERROR = 599
};

std::ostream& operator<< (std::ostream&, StatusCode);

} // namespace attribute
} // namespace response
} // namespace http
} // namespace network
} // namespace sober

#endif // SOBER_NETWORK_HTTP_RESPONSE_ATTRIBUTE_STATUSCODE_HPP_
